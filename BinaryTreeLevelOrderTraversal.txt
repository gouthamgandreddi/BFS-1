class Solution {
    List<List<Integer>> nodesByLevel ;
    public List<List<Integer>> levelOrder(TreeNode root) {
        nodesByLevel = new ArrayList<>();
        dfs(root, 0);
        return nodesByLevel;
    }
    private void dfs(TreeNode root, int depth){
        // base
        if(root == null ) return ;

        // logic
        if( depth == nodesByLevel.size()){
            nodesByLevel.add(new ArrayList<>());
        }
        nodesByLevel.get(depth).add(root.val);                   
        if(root.left != null) dfs(root.left , depth+1);
        if(root.right != null) dfs(root.right, depth+1);

    }
}